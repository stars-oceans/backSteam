var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// mock/user.js
var user_exports = {};
__export(user_exports, {
  default: () => user_default
});
module.exports = __toCommonJS(user_exports);
function createUserList() {
  return [
    {
      userId: 1,
      avatar: "https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif",
      username: "admin",
      password: "111111",
      desc: "\u5E73\u53F0\u7BA1\u7406\u5458",
      roles: ["\u5E73\u53F0\u7BA1\u7406\u5458"],
      buttons: ["cuser.detail"],
      routes: ["home"],
      token: "Admin Token"
    },
    {
      userId: 2,
      avatar: "https://wpimg.wallstcn.com/f778738c-e4f8-4870-b634-56703b4acafe.gif",
      username: "system",
      password: "111111",
      desc: "\u7CFB\u7EDF\u7BA1\u7406\u5458",
      roles: ["\u7CFB\u7EDF\u7BA1\u7406\u5458"],
      buttons: ["cuser.detail", "cuser.user"],
      routes: ["home"],
      token: "System Token"
    }
  ];
}
var user_default = [
  // 用户登录接口
  {
    url: "/user/login",
    //请求地址
    method: "post",
    //请求方式
    response: ({ body }) => {
      const { username, password } = body;
      const checkUser = createUserList().find(
        (item) => item.username === username && item.password === password
      );
      if (!checkUser) {
        return { code: 201, data: { message: "\u8D26\u53F7\u6216\u8005\u5BC6\u7801\u4E0D\u6B63\u786E" } };
      }
      const { token } = checkUser;
      return { code: 200, data: { token } };
    }
  },
  // 获取用户信息
  {
    url: "/user/info",
    method: "get",
    response: (request) => {
      const token = request.headers.token;
      const checkUser = createUserList().find((item) => item.token === token);
      if (!checkUser) {
        return { code: 201, data: { message: "\u83B7\u53D6\u7528\u6237\u4FE1\u606F\u5931\u8D25" } };
      }
      return { code: 200, data: { checkUser } };
    }
  }
];
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibW9jay91c2VyLmpzIl0sCiAgInNvdXJjZXNDb250ZW50IjogWyJjb25zdCBfX2luamVjdGVkX2ZpbGVuYW1lX18gPSBcIkQ6XFxcXFx1NTI0RFx1N0FFRlx1NEU0Qlx1OERFRlxcXFwwNy5cdTk4NzlcdTc2RUVcdTk2MzZcdTZCQjVcXFxcdnVlMy10cy12aXRlXHU2NzAwXHU1NDBFXHU3Njg0XHU1NDBFXHU1M0YwXHU3QkExXHU3NDA2XHU3Q0ZCXHU3RURGXFxcXHZpdGUtcHJvamVjdFxcXFxtb2NrXFxcXHVzZXIuanNcIjtjb25zdCBfX2luamVjdGVkX2Rpcm5hbWVfXyA9IFwiRDpcXFxcXHU1MjREXHU3QUVGXHU0RTRCXHU4REVGXFxcXDA3Llx1OTg3OVx1NzZFRVx1OTYzNlx1NkJCNVxcXFx2dWUzLXRzLXZpdGVcdTY3MDBcdTU0MEVcdTc2ODRcdTU0MEVcdTUzRjBcdTdCQTFcdTc0MDZcdTdDRkJcdTdFREZcXFxcdml0ZS1wcm9qZWN0XFxcXG1vY2tcIjtjb25zdCBfX2luamVjdGVkX2ltcG9ydF9tZXRhX3VybF9fID0gXCJmaWxlOi8vL0Q6LyVFNSU4OSU4RCVFNyVBQiVBRiVFNCVCOSU4QiVFOCVCNyVBRi8wNy4lRTklQTElQjklRTclOUIlQUUlRTklOTglQjYlRTYlQUUlQjUvdnVlMy10cy12aXRlJUU2JTlDJTgwJUU1JTkwJThFJUU3JTlBJTg0JUU1JTkwJThFJUU1JThGJUIwJUU3JUFFJUExJUU3JTkwJTg2JUU3JUIzJUJCJUU3JUJCJTlGL3ZpdGUtcHJvamVjdC9tb2NrL3VzZXIuanNcIjsvL1x1NzUyOFx1NjIzN1x1NEZFMVx1NjA2Rlx1NjU3MFx1NjM2RVxuZnVuY3Rpb24gY3JlYXRlVXNlckxpc3QoKSB7XG4gIHJldHVybiBbXG4gICAgICB7XG4gICAgICAgICAgdXNlcklkOiAxLFxuICAgICAgICAgIGF2YXRhcjpcbiAgICAgICAgICAgICAgJ2h0dHBzOi8vd3BpbWcud2FsbHN0Y24uY29tL2Y3Nzg3MzhjLWU0ZjgtNDg3MC1iNjM0LTU2NzAzYjRhY2FmZS5naWYnLFxuICAgICAgICAgIHVzZXJuYW1lOiAnYWRtaW4nLFxuICAgICAgICAgIHBhc3N3b3JkOiAnMTExMTExJyxcbiAgICAgICAgICBkZXNjOiAnXHU1RTczXHU1M0YwXHU3QkExXHU3NDA2XHU1NDU4JyxcbiAgICAgICAgICByb2xlczogWydcdTVFNzNcdTUzRjBcdTdCQTFcdTc0MDZcdTU0NTgnXSxcbiAgICAgICAgICBidXR0b25zOiBbJ2N1c2VyLmRldGFpbCddLFxuICAgICAgICAgIHJvdXRlczogWydob21lJ10sXG4gICAgICAgICAgdG9rZW46ICdBZG1pbiBUb2tlbicsXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICAgIHVzZXJJZDogMixcbiAgICAgICAgICBhdmF0YXI6XG4gICAgICAgICAgICAgICdodHRwczovL3dwaW1nLndhbGxzdGNuLmNvbS9mNzc4NzM4Yy1lNGY4LTQ4NzAtYjYzNC01NjcwM2I0YWNhZmUuZ2lmJyxcbiAgICAgICAgICB1c2VybmFtZTogJ3N5c3RlbScsXG4gICAgICAgICAgcGFzc3dvcmQ6ICcxMTExMTEnLFxuICAgICAgICAgIGRlc2M6ICdcdTdDRkJcdTdFREZcdTdCQTFcdTc0MDZcdTU0NTgnLFxuICAgICAgICAgIHJvbGVzOiBbJ1x1N0NGQlx1N0VERlx1N0JBMVx1NzQwNlx1NTQ1OCddLFxuICAgICAgICAgIGJ1dHRvbnM6IFsnY3VzZXIuZGV0YWlsJywgJ2N1c2VyLnVzZXInXSxcbiAgICAgICAgICByb3V0ZXM6IFsnaG9tZSddLFxuICAgICAgICAgIHRva2VuOiAnU3lzdGVtIFRva2VuJyxcbiAgICAgIH0sXG4gIF1cbn1cblxuZXhwb3J0IGRlZmF1bHQgW1xuICAvLyBcdTc1MjhcdTYyMzdcdTc2N0JcdTVGNTVcdTYzQTVcdTUzRTNcbiAge1xuICAgICAgdXJsOiAnL3VzZXIvbG9naW4nLC8vXHU4QkY3XHU2QzQyXHU1NzMwXHU1NzQwXG4gICAgICBtZXRob2Q6ICdwb3N0JywvL1x1OEJGN1x1NkM0Mlx1NjVCOVx1NUYwRlxuICAgICAgcmVzcG9uc2U6ICh7IGJvZHkgfSkgPT4ge1xuICAgICAgICAgIC8vXHU4M0I3XHU1M0Q2XHU4QkY3XHU2QzQyXHU0RjUzXHU2NDNBXHU1RTI2XHU4RkM3XHU2NzY1XHU3Njg0XHU3NTI4XHU2MjM3XHU1NDBEXHU0RTBFXHU1QkM2XHU3ODAxXG4gICAgICAgICAgY29uc3QgeyB1c2VybmFtZSwgcGFzc3dvcmQgfSA9IGJvZHk7XG4gICAgICAgICAgLy9cdThDMDNcdTc1MjhcdTgzQjdcdTUzRDZcdTc1MjhcdTYyMzdcdTRGRTFcdTYwNkZcdTUxRkRcdTY1NzAsXHU3NTI4XHU0RThFXHU1MjI0XHU2NUFEXHU2NjJGXHU1NDI2XHU2NzA5XHU2QjY0XHU3NTI4XHU2MjM3XG4gICAgICAgICAgY29uc3QgY2hlY2tVc2VyID0gY3JlYXRlVXNlckxpc3QoKS5maW5kKFxuICAgICAgICAgICAgICAoaXRlbSkgPT4gaXRlbS51c2VybmFtZSA9PT0gdXNlcm5hbWUgJiYgaXRlbS5wYXNzd29yZCA9PT0gcGFzc3dvcmQsXG4gICAgICAgICAgKVxuICAgICAgICAgIC8vXHU2Q0ExXHU2NzA5XHU3NTI4XHU2MjM3XHU4RkQ0XHU1NkRFXHU1OTMxXHU4RDI1XHU0RkUxXHU2MDZGXG4gICAgICAgICAgaWYgKCFjaGVja1VzZXIpIHtcbiAgICAgICAgICAgICAgcmV0dXJuIHsgY29kZTogMjAxLCBkYXRhOiB7IG1lc3NhZ2U6ICdcdThEMjZcdTUzRjdcdTYyMTZcdTgwMDVcdTVCQzZcdTc4MDFcdTRFMERcdTZCNjNcdTc4NkUnIH0gfVxuICAgICAgICAgIH1cbiAgICAgICAgICAvL1x1NTk4Mlx1Njc5Q1x1NjcwOVx1OEZENFx1NTZERVx1NjIxMFx1NTI5Rlx1NEZFMVx1NjA2RlxuICAgICAgICAgIGNvbnN0IHsgdG9rZW4gfSA9IGNoZWNrVXNlclxuICAgICAgICAgIHJldHVybiB7IGNvZGU6IDIwMCwgZGF0YTogeyB0b2tlbiB9IH1cbiAgICAgIH0sXG4gIH0sXG4gIC8vIFx1ODNCN1x1NTNENlx1NzUyOFx1NjIzN1x1NEZFMVx1NjA2RlxuICB7XG4gICAgICB1cmw6ICcvdXNlci9pbmZvJyxcbiAgICAgIG1ldGhvZDogJ2dldCcsXG4gICAgICByZXNwb25zZTogKHJlcXVlc3QpID0+IHtcbiAgICAgICAgICAvL1x1ODNCN1x1NTNENlx1OEJGN1x1NkM0Mlx1NTkzNFx1NjQzQVx1NUUyNnRva2VuXG4gICAgICAgICAgY29uc3QgdG9rZW4gPSByZXF1ZXN0LmhlYWRlcnMudG9rZW47XG4gICAgICAgICAgLy9cdTY3RTVcdTc3MEJcdTc1MjhcdTYyMzdcdTRGRTFcdTYwNkZcdTY2MkZcdTU0MjZcdTUzMDVcdTU0MkJcdTY3MDlcdTZCMjF0b2tlblx1NzUyOFx1NjIzN1xuICAgICAgICAgIGNvbnN0IGNoZWNrVXNlciA9IGNyZWF0ZVVzZXJMaXN0KCkuZmluZCgoaXRlbSkgPT4gaXRlbS50b2tlbiA9PT0gdG9rZW4pXG4gICAgICAgICAgLy9cdTZDQTFcdTY3MDlcdThGRDRcdTU2REVcdTU5MzFcdThEMjVcdTc2ODRcdTRGRTFcdTYwNkZcbiAgICAgICAgICBpZiAoIWNoZWNrVXNlcikge1xuICAgICAgICAgICAgICByZXR1cm4geyBjb2RlOiAyMDEsIGRhdGE6IHsgbWVzc2FnZTogJ1x1ODNCN1x1NTNENlx1NzUyOFx1NjIzN1x1NEZFMVx1NjA2Rlx1NTkzMVx1OEQyNScgfSB9XG4gICAgICAgICAgfVxuICAgICAgICAgIC8vXHU1OTgyXHU2NzlDXHU2NzA5XHU4RkQ0XHU1NkRFXHU2MjEwXHU1MjlGXHU0RkUxXHU2MDZGXG4gICAgICAgICAgcmV0dXJuIHsgY29kZTogMjAwLCBkYXRhOiB7Y2hlY2tVc2VyfSB9XG4gICAgICB9LFxuICB9LFxuXSJdLAogICJtYXBwaW5ncyI6ICI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0EsU0FBUyxpQkFBaUI7QUFDeEIsU0FBTztBQUFBLElBQ0g7QUFBQSxNQUNJLFFBQVE7QUFBQSxNQUNSLFFBQ0k7QUFBQSxNQUNKLFVBQVU7QUFBQSxNQUNWLFVBQVU7QUFBQSxNQUNWLE1BQU07QUFBQSxNQUNOLE9BQU8sQ0FBQyxnQ0FBTztBQUFBLE1BQ2YsU0FBUyxDQUFDLGNBQWM7QUFBQSxNQUN4QixRQUFRLENBQUMsTUFBTTtBQUFBLE1BQ2YsT0FBTztBQUFBLElBQ1g7QUFBQSxJQUNBO0FBQUEsTUFDSSxRQUFRO0FBQUEsTUFDUixRQUNJO0FBQUEsTUFDSixVQUFVO0FBQUEsTUFDVixVQUFVO0FBQUEsTUFDVixNQUFNO0FBQUEsTUFDTixPQUFPLENBQUMsZ0NBQU87QUFBQSxNQUNmLFNBQVMsQ0FBQyxnQkFBZ0IsWUFBWTtBQUFBLE1BQ3RDLFFBQVEsQ0FBQyxNQUFNO0FBQUEsTUFDZixPQUFPO0FBQUEsSUFDWDtBQUFBLEVBQ0o7QUFDRjtBQUVBLElBQU8sZUFBUTtBQUFBO0FBQUEsRUFFYjtBQUFBLElBQ0ksS0FBSztBQUFBO0FBQUEsSUFDTCxRQUFRO0FBQUE7QUFBQSxJQUNSLFVBQVUsQ0FBQyxFQUFFLEtBQUssTUFBTTtBQUVwQixZQUFNLEVBQUUsVUFBVSxTQUFTLElBQUk7QUFFL0IsWUFBTSxZQUFZLGVBQWUsRUFBRTtBQUFBLFFBQy9CLENBQUMsU0FBUyxLQUFLLGFBQWEsWUFBWSxLQUFLLGFBQWE7QUFBQSxNQUM5RDtBQUVBLFVBQUksQ0FBQyxXQUFXO0FBQ1osZUFBTyxFQUFFLE1BQU0sS0FBSyxNQUFNLEVBQUUsU0FBUyx5REFBWSxFQUFFO0FBQUEsTUFDdkQ7QUFFQSxZQUFNLEVBQUUsTUFBTSxJQUFJO0FBQ2xCLGFBQU8sRUFBRSxNQUFNLEtBQUssTUFBTSxFQUFFLE1BQU0sRUFBRTtBQUFBLElBQ3hDO0FBQUEsRUFDSjtBQUFBO0FBQUEsRUFFQTtBQUFBLElBQ0ksS0FBSztBQUFBLElBQ0wsUUFBUTtBQUFBLElBQ1IsVUFBVSxDQUFDLFlBQVk7QUFFbkIsWUFBTSxRQUFRLFFBQVEsUUFBUTtBQUU5QixZQUFNLFlBQVksZUFBZSxFQUFFLEtBQUssQ0FBQyxTQUFTLEtBQUssVUFBVSxLQUFLO0FBRXRFLFVBQUksQ0FBQyxXQUFXO0FBQ1osZUFBTyxFQUFFLE1BQU0sS0FBSyxNQUFNLEVBQUUsU0FBUyxtREFBVyxFQUFFO0FBQUEsTUFDdEQ7QUFFQSxhQUFPLEVBQUUsTUFBTSxLQUFLLE1BQU0sRUFBQyxVQUFTLEVBQUU7QUFBQSxJQUMxQztBQUFBLEVBQ0o7QUFDRjsiLAogICJuYW1lcyI6IFtdCn0K
